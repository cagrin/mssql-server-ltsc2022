name: Basic image tests
on:
  workflow_dispatch:

jobs:
  test-2019-latest:
    name: Test 2019-latest
    runs-on: windows-2016
    env:
      IMAGE_NAME: cagrin/mssql-server-oldies:2019-latest
      PRODUCT_VERSION: 15.0.4188.2
      MSSQL_COLLATION: SQL_Latin1_General_CP1_CI_AS
    steps:
    - name: Pull image
      run: docker pull ${{ env.IMAGE_NAME }}
    - name: Start image
      run: docker run -e "ACCEPT_EULA=Y" -e "SA_PASSWORD=Password." -p 51433:1433 -d ${{ env.IMAGE_NAME }}
    - name: Test image
      shell: pwsh
      run: |
        Invoke-Sqlcmd -ServerInstance "localhost,51433" -Database "master" -Username "sa" -Password "Password." -Query "IF SERVERPROPERTY('ProductVersion') <> '${{ env.PRODUCT_VERSION }}' RAISERROR ('ProductVersion is invalid', 16, 1)"
        Invoke-Sqlcmd -ServerInstance "localhost,51433" -Database "master" -Username "sa" -Password "Password." -Query "IF SERVERPROPERTY('Collation') <> '${{ env.MSSQL_COLLATION }}' RAISERROR ('Collation is invalid', 16, 1)"
        Invoke-Sqlcmd -ServerInstance "localhost,51433" -Database "master" -Username "sa" -Password "Password." -Query "IF SERVERPROPERTY('Edition') <> 'Developer Edition (64-bit)' RAISERROR ('Edition is invalid', 16, 1)"
  test-2017-latest:
    name: Test 2017-latest
    runs-on: windows-2016
    env:
      IMAGE_NAME: cagrin/mssql-server-oldies:2017-latest
      PRODUCT_VERSION: 14.0.3430.2
      MSSQL_COLLATION: SQL_Latin1_General_CP1_CI_AS
    steps:
    - name: Pull image
      run: docker pull ${{ env.IMAGE_NAME }}
    - name: Start image
      run: docker run -e "ACCEPT_EULA=Y" -e "SA_PASSWORD=Password." -p 51433:1433 -d ${{ env.IMAGE_NAME }}
    - name: Test image
      shell: pwsh
      run: |
        Invoke-Sqlcmd -ServerInstance "localhost,51433" -Database "master" -Username "sa" -Password "Password." -Query "IF SERVERPROPERTY('ProductVersion') <> '${{ env.PRODUCT_VERSION }}' RAISERROR ('ProductVersion is invalid', 16, 1)"
        Invoke-Sqlcmd -ServerInstance "localhost,51433" -Database "master" -Username "sa" -Password "Password." -Query "IF SERVERPROPERTY('Collation') <> '${{ env.MSSQL_COLLATION }}' RAISERROR ('Collation is invalid', 16, 1)"
        Invoke-Sqlcmd -ServerInstance "localhost,51433" -Database "master" -Username "sa" -Password "Password." -Query "IF SERVERPROPERTY('Edition') <> 'Developer Edition (64-bit)' RAISERROR ('Edition is invalid', 16, 1)"
  test-2016-latest:
    name: Test 2016-latest
    runs-on: windows-2016
    env:
      IMAGE_NAME: cagrin/mssql-server-oldies:2016-latest
      PRODUCT_VERSION: 13.0.6404.1
      MSSQL_COLLATION: SQL_Latin1_General_CP1_CI_AS
    steps:
    - name: Pull image
      run: docker pull ${{ env.IMAGE_NAME }}
    - name: Start image
      run: docker run -e "ACCEPT_EULA=Y" -e "SA_PASSWORD=Password." -p 51433:1433 -d ${{ env.IMAGE_NAME }}
    - name: Test image
      shell: pwsh
      run: |
        Invoke-Sqlcmd -ServerInstance "localhost,51433" -Database "master" -Username "sa" -Password "Password." -Query "IF SERVERPROPERTY('ProductVersion') <> '${{ env.PRODUCT_VERSION }}' RAISERROR ('ProductVersion is invalid', 16, 1)"
        Invoke-Sqlcmd -ServerInstance "localhost,51433" -Database "master" -Username "sa" -Password "Password." -Query "IF SERVERPROPERTY('Collation') <> '${{ env.MSSQL_COLLATION }}' RAISERROR ('Collation is invalid', 16, 1)"
        Invoke-Sqlcmd -ServerInstance "localhost,51433" -Database "master" -Username "sa" -Password "Password." -Query "IF SERVERPROPERTY('Edition') <> 'Developer Edition (64-bit)' RAISERROR ('Edition is invalid', 16, 1)"
  test-2014-latest:
    name: Test 2014-latest
    runs-on: windows-2016
    env:
      IMAGE_NAME: cagrin/mssql-server-oldies:2014-latest
      PRODUCT_VERSION: 12.0.6433.1
      MSSQL_COLLATION: SQL_Latin1_General_CP1_CI_AS
    steps:
    - name: Pull image
      run: docker pull ${{ env.IMAGE_NAME }}
    - name: Start image
      run: docker run -e "ACCEPT_EULA=Y" -e "SA_PASSWORD=Password." -p 51433:1433 -d ${{ env.IMAGE_NAME }}
    - name: Test image
      shell: pwsh
      run: |
        Invoke-Sqlcmd -ServerInstance "localhost,51433" -Database "master" -Username "sa" -Password "Password." -Query "IF SERVERPROPERTY('ProductVersion') <> '${{ env.PRODUCT_VERSION }}' RAISERROR ('ProductVersion is invalid', 16, 1)"
        Invoke-Sqlcmd -ServerInstance "localhost,51433" -Database "master" -Username "sa" -Password "Password." -Query "IF SERVERPROPERTY('Collation') <> '${{ env.MSSQL_COLLATION }}' RAISERROR ('Collation is invalid', 16, 1)"
        Invoke-Sqlcmd -ServerInstance "localhost,51433" -Database "master" -Username "sa" -Password "Password." -Query "IF SERVERPROPERTY('Edition') <> 'Developer Edition (64-bit)' RAISERROR ('Edition is invalid', 16, 1)"
  test-2012-latest:
    name: Test 2012-latest
    runs-on: windows-2016
    env:
      IMAGE_NAME: cagrin/mssql-server-oldies:2012-latest
      PRODUCT_VERSION: 11.0.7507.2
      MSSQL_COLLATION: SQL_Latin1_General_CP1_CI_AS
    steps:
    - name: Pull image
      run: docker pull ${{ env.IMAGE_NAME }}
    - name: Start image
      run: docker run -e "ACCEPT_EULA=Y" -e "SA_PASSWORD=Password." -p 51433:1433 -d ${{ env.IMAGE_NAME }}
    - name: Test image
      shell: pwsh
      run: |
        Invoke-Sqlcmd -ServerInstance "localhost,51433" -Database "master" -Username "sa" -Password "Password." -Query "IF SERVERPROPERTY('ProductVersion') <> '${{ env.PRODUCT_VERSION }}' RAISERROR ('ProductVersion is invalid', 16, 1)"
        Invoke-Sqlcmd -ServerInstance "localhost,51433" -Database "master" -Username "sa" -Password "Password." -Query "IF SERVERPROPERTY('Collation') <> '${{ env.MSSQL_COLLATION }}' RAISERROR ('Collation is invalid', 16, 1)"
        Invoke-Sqlcmd -ServerInstance "localhost,51433" -Database "master" -Username "sa" -Password "Password." -Query "IF SERVERPROPERTY('Edition') <> 'Developer Edition (64-bit)' RAISERROR ('Edition is invalid', 16, 1)"
  test-2019-latest-pl:
    name: Test 2019-latest-pl
    runs-on: windows-2016
    env:
      IMAGE_NAME: cagrin/mssql-server-oldies:2019-latest-pl
      PRODUCT_VERSION: 15.0.4188.2
      MSSQL_COLLATION: Polish_CI_AS
    steps:
    - name: Pull image
      run: docker pull ${{ env.IMAGE_NAME }}
    - name: Start image
      run: docker run -e "ACCEPT_EULA=Y" -e "SA_PASSWORD=Password." -p 51433:1433 -d ${{ env.IMAGE_NAME }}
    - name: Test image
      shell: pwsh
      run: |
        Invoke-Sqlcmd -ServerInstance "localhost,51433" -Database "master" -Username "sa" -Password "Password." -Query "IF SERVERPROPERTY('ProductVersion') <> '${{ env.PRODUCT_VERSION }}' RAISERROR ('ProductVersion is invalid', 16, 1)"
        Invoke-Sqlcmd -ServerInstance "localhost,51433" -Database "master" -Username "sa" -Password "Password." -Query "IF SERVERPROPERTY('Collation') <> '${{ env.MSSQL_COLLATION }}' RAISERROR ('Collation is invalid', 16, 1)"
        Invoke-Sqlcmd -ServerInstance "localhost,51433" -Database "master" -Username "sa" -Password "Password." -Query "IF SERVERPROPERTY('Edition') <> 'Developer Edition (64-bit)' RAISERROR ('Edition is invalid', 16, 1)"
  test-2017-latest-pl:
    name: Test 2017-latest-pl
    runs-on: windows-2016
    env:
      IMAGE_NAME: cagrin/mssql-server-oldies:2017-latest-pl
      PRODUCT_VERSION: 14.0.3430.2
      MSSQL_COLLATION: Polish_CI_AS
    steps:
    - name: Pull image
      run: docker pull ${{ env.IMAGE_NAME }}
    - name: Start image
      run: docker run -e "ACCEPT_EULA=Y" -e "SA_PASSWORD=Password." -p 51433:1433 -d ${{ env.IMAGE_NAME }}
    - name: Test image
      shell: pwsh
      run: |
        Invoke-Sqlcmd -ServerInstance "localhost,51433" -Database "master" -Username "sa" -Password "Password." -Query "IF SERVERPROPERTY('ProductVersion') <> '${{ env.PRODUCT_VERSION }}' RAISERROR ('ProductVersion is invalid', 16, 1)"
        Invoke-Sqlcmd -ServerInstance "localhost,51433" -Database "master" -Username "sa" -Password "Password." -Query "IF SERVERPROPERTY('Collation') <> '${{ env.MSSQL_COLLATION }}' RAISERROR ('Collation is invalid', 16, 1)"
        Invoke-Sqlcmd -ServerInstance "localhost,51433" -Database "master" -Username "sa" -Password "Password." -Query "IF SERVERPROPERTY('Edition') <> 'Developer Edition (64-bit)' RAISERROR ('Edition is invalid', 16, 1)"
  test-2016-latest-pl:
    name: Test 2016-latest-pl
    runs-on: windows-2016
    env:
      IMAGE_NAME: cagrin/mssql-server-oldies:2016-latest-pl
      PRODUCT_VERSION: 13.0.6404.1
      MSSQL_COLLATION: Polish_CI_AS
    steps:
    - name: Pull image
      run: docker pull ${{ env.IMAGE_NAME }}
    - name: Start image
      run: docker run -e "ACCEPT_EULA=Y" -e "SA_PASSWORD=Password." -p 51433:1433 -d ${{ env.IMAGE_NAME }}
    - name: Test image
      shell: pwsh
      run: |
        Invoke-Sqlcmd -ServerInstance "localhost,51433" -Database "master" -Username "sa" -Password "Password." -Query "IF SERVERPROPERTY('ProductVersion') <> '${{ env.PRODUCT_VERSION }}' RAISERROR ('ProductVersion is invalid', 16, 1)"
        Invoke-Sqlcmd -ServerInstance "localhost,51433" -Database "master" -Username "sa" -Password "Password." -Query "IF SERVERPROPERTY('Collation') <> '${{ env.MSSQL_COLLATION }}' RAISERROR ('Collation is invalid', 16, 1)"
        Invoke-Sqlcmd -ServerInstance "localhost,51433" -Database "master" -Username "sa" -Password "Password." -Query "IF SERVERPROPERTY('Edition') <> 'Developer Edition (64-bit)' RAISERROR ('Edition is invalid', 16, 1)"
  test-2014-latest-pl:
    name: Test 2014-latest-pl
    runs-on: windows-2016
    env:
      IMAGE_NAME: cagrin/mssql-server-oldies:2014-latest-pl
      PRODUCT_VERSION: 12.0.6433.1
      MSSQL_COLLATION: Polish_CI_AS
    steps:
    - name: Pull image
      run: docker pull ${{ env.IMAGE_NAME }}
    - name: Start image
      run: docker run -e "ACCEPT_EULA=Y" -e "SA_PASSWORD=Password." -p 51433:1433 -d ${{ env.IMAGE_NAME }}
    - name: Test image
      shell: pwsh
      run: |
        Invoke-Sqlcmd -ServerInstance "localhost,51433" -Database "master" -Username "sa" -Password "Password." -Query "IF SERVERPROPERTY('ProductVersion') <> '${{ env.PRODUCT_VERSION }}' RAISERROR ('ProductVersion is invalid', 16, 1)"
        Invoke-Sqlcmd -ServerInstance "localhost,51433" -Database "master" -Username "sa" -Password "Password." -Query "IF SERVERPROPERTY('Collation') <> '${{ env.MSSQL_COLLATION }}' RAISERROR ('Collation is invalid', 16, 1)"
        Invoke-Sqlcmd -ServerInstance "localhost,51433" -Database "master" -Username "sa" -Password "Password." -Query "IF SERVERPROPERTY('Edition') <> 'Developer Edition (64-bit)' RAISERROR ('Edition is invalid', 16, 1)"
  test-2012-latest-pl:
    name: Test 2012-latest-pl
    runs-on: windows-2016
    env:
      IMAGE_NAME: cagrin/mssql-server-oldies:2012-latest-pl
      PRODUCT_VERSION: 11.0.7507.2
      MSSQL_COLLATION: Polish_CI_AS
    steps:
    - name: Pull image
      run: docker pull ${{ env.IMAGE_NAME }}
    - name: Start image
      run: docker run -e "ACCEPT_EULA=Y" -e "SA_PASSWORD=Password." -p 51433:1433 -d ${{ env.IMAGE_NAME }}
    - name: Test image
      shell: pwsh
      run: |
        Invoke-Sqlcmd -ServerInstance "localhost,51433" -Database "master" -Username "sa" -Password "Password." -Query "IF SERVERPROPERTY('ProductVersion') <> '${{ env.PRODUCT_VERSION }}' RAISERROR ('ProductVersion is invalid', 16, 1)"
        Invoke-Sqlcmd -ServerInstance "localhost,51433" -Database "master" -Username "sa" -Password "Password." -Query "IF SERVERPROPERTY('Collation') <> '${{ env.MSSQL_COLLATION }}' RAISERROR ('Collation is invalid', 16, 1)"
        Invoke-Sqlcmd -ServerInstance "localhost,51433" -Database "master" -Username "sa" -Password "Password." -Query "IF SERVERPROPERTY('Edition') <> 'Developer Edition (64-bit)' RAISERROR ('Edition is invalid', 16, 1)"