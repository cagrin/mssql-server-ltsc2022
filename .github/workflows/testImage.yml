name: Basic image tests
on:
  workflow_dispatch:

jobs:
  sql-2016-windows-test:
    name: SQL Server 2016 on Windows
    runs-on: windows-2016
    env:
      IMAGE_NAME: cagrin/mssql-server-oldies:2016-latest
    steps:
    - name: Pull image
      run: docker pull ${{ env.IMAGE_NAME }}
    - name: Start docker
      run: docker run -e "ACCEPT_EULA=Y" -e "SA_PASSWORD=Password." -p 51433:1433 -d ${{ env.IMAGE_NAME }}
    - name: Test image
      shell: pwsh
      run: Invoke-Sqlcmd -ServerInstance "localhost,51433" -Database "master" -Username "sa" -Password "Password." -Query "select 1"
  sql-2014-windows-test:
    name: SQL Server 2014 on Windows
    runs-on: windows-2016
    env:
      IMAGE_NAME: cagrin/mssql-server-oldies:2014-latest
    steps:
    - name: Pull image
      run: docker pull ${{ env.IMAGE_NAME }}
    - name: Start docker
      run: docker run -e "ACCEPT_EULA=Y" -e "SA_PASSWORD=Password." -p 51433:1433 -d ${{ env.IMAGE_NAME }}
    - name: Test image
      shell: pwsh
      run: Invoke-Sqlcmd -ServerInstance "localhost,51433" -Database "master" -Username "sa" -Password "Password." -Query "select 1"
  sql-2012-windows-test:
    name: SQL Server 2012 on Windows
    runs-on: windows-2016
    env:
      IMAGE_NAME: cagrin/mssql-server-oldies:2012-latest
    steps:
    - name: Pull image
      run: docker pull ${{ env.IMAGE_NAME }}
    - name: Start docker
      run: docker run -e "ACCEPT_EULA=Y" -e "SA_PASSWORD=Password." -p 51433:1433 -d ${{ env.IMAGE_NAME }}
    - name: Test image
      shell: pwsh
      run: Invoke-Sqlcmd -ServerInstance "localhost,51433" -Database "master" -Username "sa" -Password "Password." -Query "select 1"